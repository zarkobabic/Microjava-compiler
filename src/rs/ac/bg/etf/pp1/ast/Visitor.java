// generated with ast extension for cup
// version 0.8
// 27/5/2023 17:32:48


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ReturnType ReturnType);
    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(Constants Constants);
    public void visit(FormParameterList FormParameterList);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(Designator Designator);
    public void visit(SingleOrMultipleVarDecl SingleOrMultipleVarDecl);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(ActParsList ActParsList);
    public void visit(VarConstDeclList VarConstDeclList);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(TypesOfVar TypesOfVar);
    public void visit(Statement Statement);
    public void visit(SingleOrMultipleConstantDecl SingleOrMultipleConstantDecl);
    public void visit(CondFact CondFact);
    public void visit(IfStatement IfStatement);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(CondFactExprRelopExpr CondFactExprRelopExpr);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(ConditionMultipleFact ConditionMultipleFact);
    public void visit(CondTermSingleFact CondTermSingleFact);
    public void visit(ConditionMultipleTerm ConditionMultipleTerm);
    public void visit(ConditionSingleTerm ConditionSingleTerm);
    public void visit(IfStatementFlag IfStatementFlag);
    public void visit(IfRightParenthesis IfRightParenthesis);
    public void visit(IfElsePart IfElsePart);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(IfStatementWithoutElse IfStatementWithoutElse);
    public void visit(StatementIfStatement StatementIfStatement);
    public void visit(StatementCodeBlock StatementCodeBlock);
    public void visit(StatementPrintWithNum StatementPrintWithNum);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementWhile StatementWhile);
    public void visit(StatementDesignatorStatement StatementDesignatorStatement);
    public void visit(WhileRightParenthesis WhileRightParenthesis);
    public void visit(WhileInstructionFlag WhileInstructionFlag);
    public void visit(FactorNewMatrix FactorNewMatrix);
    public void visit(FactorCalculation FactorCalculation);
    public void visit(FactorNewArray FactorNewArray);
    public void visit(FactorConstants FactorConstants);
    public void visit(FactorFunctionCall FactorFunctionCall);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermMulopFactor TermMulopFactor);
    public void visit(TermFactor TermFactor);
    public void visit(ExprAddopTerm ExprAddopTerm);
    public void visit(ExprTerm ExprTerm);
    public void visit(ExprMinusTerm ExprMinusTerm);
    public void visit(MyObj MyObj);
    public void visit(DesignatorMatrixElement DesignatorMatrixElement);
    public void visit(DesignatorArrayElement DesignatorArrayElement);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(MultipleActParsExpr MultipleActParsExpr);
    public void visit(SingleActParsExpr SingleActParsExpr);
    public void visit(ActParsExists ActParsExists);
    public void visit(NoActPars NoActPars);
    public void visit(MapVariable MapVariable);
    public void visit(DesignatorStatementMap DesignatorStatementMap);
    public void visit(DesignatorStatementFunctionCall DesignatorStatementFunctionCall);
    public void visit(DesignatorStatementDecrement DesignatorStatementDecrement);
    public void visit(DesignatorStatementIncrement DesignatorStatementIncrement);
    public void visit(DesignatorStatementAssignment DesignatorStatementAssignment);
    public void visit(NextStatement NextStatement);
    public void visit(NoStatementList NoStatementList);
    public void visit(MultipleFormParameter MultipleFormParameter);
    public void visit(SingleFormParameter SingleFormParameter);
    public void visit(NextFormParameterList NextFormParameterList);
    public void visit(NoFormPars NoFormPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NextMethodDecl NextMethodDecl);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(MultipleConstantDecl MultipleConstantDecl);
    public void visit(SingleConstantDecl SingleConstantDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(MatrixIdent MatrixIdent);
    public void visit(ArrayIdent ArrayIdent);
    public void visit(Identifier Identifier);
    public void visit(MultipleVarDecl MultipleVarDecl);
    public void visit(SingleVarDecl SingleVarDecl);
    public void visit(VarDecl VarDecl);
    public void visit(VarDeclListSignle VarDeclListSignle);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(NextConstDeclInJoinedList NextConstDeclInJoinedList);
    public void visit(NextVarDeclInJoinedList NextVarDeclInJoinedList);
    public void visit(NoVarConstDeclList NoVarConstDeclList);
    public void visit(ConstantsBool ConstantsBool);
    public void visit(ConstantsChar ConstantsChar);
    public void visit(ConstantsNum ConstantsNum);
    public void visit(Type Type);
    public void visit(ReturnTypeVoid ReturnTypeVoid);
    public void visit(ReturnTypeType ReturnTypeType);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(MulopPercent MulopPercent);
    public void visit(MulopSlash MulopSlash);
    public void visit(MulopStar MulopStar);
    public void visit(RelopLessOrEqual RelopLessOrEqual);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreaterOrEqual RelopGreaterOrEqual);
    public void visit(RelopGreater RelopGreater);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqual RelopEqual);
    public void visit(Label Label);
    public void visit(Assignop Assignop);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
